; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\output\mk22f51212\flash_program.o --asm_dir=.\Output\ --list_dir=.\Output\ --depend=.\output\mk22f51212\flash_program.d --cpu=Cortex-M4 --apcs=interwork//ropi/rwpi --diag_suppress=1 -I. -I..\..\..\shared\cmsis\TARGET_Freescale\include -I..\..\..\shared\cmsis -I..\..\..\shared\flash_algo\TARGET_Freescale -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Toshiba -DCPU_MK22FN512VLL12 -D__NO_EMBEDDED_ASM --omf_browse=.\output\mk22f51212\flash_program.crf ..\..\..\shared\flash_algo\TARGET_Freescale\flash\src\flash_program.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  flash_program PROC
;;;43     // See flash.h for documentation of this function.
;;;44     status_t flash_program(flash_driver_t * driver, uint32_t start, uint32_t * src, uint32_t lengthInBytes)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;45     {
000004  461d              MOV      r5,r3
000006  0014              MOVS     r4,r2
000008  460e              MOV      r6,r1
00000a  d01a              BEQ      |L1.66|
;;;46         if (src == NULL)
;;;47         {
;;;48             return kStatus_InvalidArgument;
;;;49         }
;;;50     
;;;51         // Check the supplied address range.
;;;52         status_t returnCode = flash_check_range(driver, start, lengthInBytes);
00000c  461a              MOV      r2,r3
00000e  f7fffffe          BL       flash_check_range
;;;53         if (returnCode)
000012  2800              CMP      r0,#0
000014  d116              BNE      |L1.68|
;;;54         {
;;;55             return returnCode;
;;;56         }
;;;57     
;;;58         while (lengthInBytes > 0)
;;;59         {
;;;60             // preparing passing parameter to program the flash block
;;;61             kFCCOBx[0] = start;
000016  4f0c              LDR      r7,|L1.72|
000018  447f              ADD      r7,r7,pc
;;;62             kFCCOBx[1] = *src++;
;;;63     #if (FSL_FEATURE_FLASH_PFLASH_BLOCK_WRITE_UNIT_SIZE == 4)
;;;64             HW_FTFx_FCCOBx_WR(0, FTFx_PROGRAM_LONGWORD);
00001a  f8dfa030          LDR      r10,|L1.76|
00001e  f04f0806          MOV      r8,#6
                  |L1.34|
000022  2d00              CMP      r5,#0                 ;58
000024  d00e              BEQ      |L1.68|
000026  6838              LDR      r0,[r7,#0]            ;61  ; kFCCOBx
000028  6006              STR      r6,[r0,#0]            ;61
00002a  6839              LDR      r1,[r7,#0]            ;62  ; kFCCOBx
00002c  cc01              LDM      r4!,{r0}              ;62
00002e  6048              STR      r0,[r1,#4]            ;62
000030  f88a8007          STRB     r8,[r10,#7]
;;;65     #elif (FSL_FEATURE_FLASH_PFLASH_BLOCK_WRITE_UNIT_SIZE == 8)
;;;66             kFCCOBx[2] = *src++;
;;;67             HW_FTFx_FCCOBx_WR(0, FTFx_PROGRAM_PHRASE);
;;;68     #else
;;;69             #error "Untreated write-unit size"
;;;70     #endif
;;;71     
;;;72             // calling flash command sequence function to execute the command
;;;73             returnCode = flash_command_sequence();
000034  f7fffffe          BL       flash_command_sequence
;;;74     
;;;75             // checking for the success of command execution
;;;76             if (kStatus_Success != returnCode)
000038  2800              CMP      r0,#0
00003a  d103              BNE      |L1.68|
;;;77             {
;;;78                 break;
;;;79             }
;;;80             else
;;;81             {
;;;82                 // update start address for next iteration
;;;83                 start += FSL_FEATURE_FLASH_PFLASH_BLOCK_WRITE_UNIT_SIZE;
00003c  1d36              ADDS     r6,r6,#4
;;;84     
;;;85                 // update lengthInBytes for next iteration
;;;86                 lengthInBytes -= FSL_FEATURE_FLASH_PFLASH_BLOCK_WRITE_UNIT_SIZE;
00003e  1f2d              SUBS     r5,r5,#4
000040  e7ef              B        |L1.34|
                  |L1.66|
000042  2004              MOVS     r0,#4                 ;48
                  |L1.68|
;;;87             }
;;;88         }
;;;89     
;;;90         return(returnCode);
;;;91     }
000044  e8bd87f0          POP      {r4-r10,pc}
;;;92     ////////////////////////////////////////////////////////////////////////////////
                          ENDP

                  |L1.72|
                          DCD      kFCCOBx+0x2c - {PC}
                  |L1.76|
                          DCD      0x40020000
